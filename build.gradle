buildscript {
    repositories {
        mavenCentral()
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "gradle.plugin.com.github.johnrengelman:shadow:$shadow_version"
    }
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'kotlin'
apply plugin: 'application'

group 'hr.askzg'
version '2.0.0'
mainClassName = "io.ktor.server.netty.EngineMain"

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}


sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-metrics:$ktor_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-server-host-common:$ktor_version"
    implementation "io.ktor:ktor-auth:$ktor_version"
    implementation "io.ktor:ktor-auth-jwt:$ktor_version"
    implementation "io.ktor:ktor-gson:$ktor_version"
    testCompile "io.ktor:ktor-server-tests:$ktor_version"
    implementation "org.postgresql:postgresql:$postgresql_version"
    implementation "com.itextpdf:itextpdf:$itextpdf_version"
    implementation "org.apache.pdfbox:pdfbox:$pdfbox_version"
    implementation("joda-time:joda-time:$jodatime_version")

    implementation("org.jetbrains.exposed:exposed-dao:$exposed_version")
    implementation "org.jetbrains.exposed:exposed-jodatime:$exposed_version"
}

shadowJar {
    baseName = "AskZgServer"
    classifier = null
    version = null
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

task stage(dependsOn: [shadowJar])
